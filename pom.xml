<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.dukecon</groupId>
    <artifactId>dukecon-feedback</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>dukecon-feedback</name>
    <description>Feedback Service for Dukecon</description>

    <licenses>
        <license>
            <name>MIT License</name>
            <url>http://www.opensource.org/licenses/mit-license.php</url>
        </license>
    </licenses>

    <properties>
        <!-- Common project properties - keep them in the beginning -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <!-- Set this to localhost if you would like to test upload server -->
        <nexus.repository.prot>https</nexus.repository.prot>
        <nexus.repository.host>dev.dukecon.org</nexus.repository.host>
        <nexus.repository.port />
        <nexus.repository.base>/nexus</nexus.repository.base>

        <!--<base.generated.docs.dir>${project.build.directory}/generated-docs</base.generated.docs.dir>-->
        <!--<generated.asciidoc.directory>${base.generated.docs.dir}/asciidoc</generated.asciidoc.directory>-->
        <!--<asciidoctor.input.directory>${project.basedir}/src/docs/asciidoc</asciidoctor.input.directory>-->
        <!--<asciidoctor.html.output.directory>${base.generated.docs.dir}/html</asciidoctor.html.output.directory>-->
        <!--<asciidoctor.pdf.output.directory>${base.generated.docs.dir}/pdf</asciidoctor.pdf.output.directory>-->

        <!-- Please keep (version) properties in alphabetical order! -->
        <asciidoctor-maven-plugin.version>1.5.3</asciidoctor-maven-plugin.version>
        <asciidoctorj.diagram.version>1.3.1</asciidoctorj.diagram.version>
        <junit-jupiter.version>5.1.0</junit-jupiter.version>
        <junit-platform-surefire-provider.version>1.0.1</junit-platform-surefire-provider.version>
        <maven-surefire-plugin.version>2.19.1</maven-surefire-plugin.version>
        <spring-boot.version>2.0.0.RELEASE</spring-boot.version>

        <!-- Check automatic versions from time to time! -->
    </properties>

    <scm>
        <url>https://github.com/dukecon/dukecon_feedback.git</url>
        <connection>scm:git:git@github.com:dukecon/dukecon_feedback.git</connection>
    </scm>

    <repositories>
        <repository>
            <id>dukecon</id>
            <url>${nexus.repository.prot}://${nexus.repository.host}${nexus.repository.port}${nexus.repository.base}/content/groups/public/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <!-- Make the site plugin happy: It needs to find some information about GEMs -->
            <id>gemfire-repository</id>
            <name>Gemfire Repository</name>
            <url>${nexus.repository.prot}://${nexus.repository.host}${nexus.repository.port}${nexus.repository.base}/content/repositories/gemfire-release-proxy/</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>dukecon</id>
            <url>http://${nexus.repository.host}${nexus.repository.port}${nexus.repository.base}/content/groups/public/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <distributionManagement>
        <snapshotRepository>
            <id>dukecon-snapshots</id>
            <name>DukeCon Snapshots</name>
            <url>http://${nexus.repository.host}${nexus.repository.port}${nexus.repository.base}/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>dukecon-releases</id>
            <name>DukeCon Snapshots</name>
            <url>http://${nexus.repository.host}${nexus.repository.port}${nexus.repository.base}/content/repositories/releases</url>
        </repository>
        <site>
            <id>dukecon-site</id>
            <name>DukeCon Site</name>
            <url>dav:http://${nexus.repository.host}${nexus.repository.port}${nexus.repository.base}/content/repositories/site/${project.groupId}/${project.artifactId}/${project.version}</url>
        </site>
    </distributionManagement>

    <issueManagement>
        <system>GitHub</system>
        <url>https://github.com/dukecon/dukecon_feedback/issues</url>
    </issueManagement>

    <dependencyManagement>
        <dependencies>
            <!-- Start with BOMs in the required order (to resolve conflicts) -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-parent</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- Keep managed dependencies in the alphabetical order of groupId + artifactId / don't provide scope! -->
            <dependency>
                <groupId>org.junit.platform</groupId>
                <artifactId>junit-platform-surefire-provider</artifactId>
                <version>${junit-platform-surefire-provider.version}</version>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>${junit-jupiter.version}</version>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${junit-jupiter.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- Keep used dependencies in the alphabetical order of groupId + artifactId / set scope here! -->
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.restdocs</groupId>
            <artifactId>spring-restdocs-mockmvc</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <!-- Keep managed plugins in the alphabetical order of groupId + artifactId -->
            <!-- Drop groupIds for Maven default plugins and keep them in the beginning -->
            <plugins>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.junit.platform</groupId>
                            <artifactId>junit-platform-surefire-provider</artifactId>
                            <version>${junit-platform-surefire-provider.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>org.junit.jupiter</groupId>
                            <artifactId>junit-jupiter-engine</artifactId>
                            <version>${junit-jupiter.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <!-- Keep used plugins in the alphabetical order of groupId + artifactId if possible
                 - For some plugins ordering does matter: If they are used in the same phase!!! -->
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>
